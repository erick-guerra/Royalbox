! function(t, e, s, n, o) {
    "use strict";
    t.mPanel = function() {
        var t = {};
        t.settings = {}, t.rssData = null, t.rssItemsTotal = 0, t.rssCurrent = 0;
        var n = new ProgressBar.Line("#progress", {
            strokeWidth: 3,
            color: "#888888"
        });
        return t.updateTime = function() {
            var s = moment().tz(this.settings.timezone);
            if ("analog" == this.settings.clockType) {
                var n = 6 * s.seconds(),
                    o = 6 * s.minutes() + n / 60,
                    a = s.hours() % 12 / 12 * 360 + 90 + o / 12;
                e("#hour").css("transform", "rotate(" + a + "deg)"), e("#minute").css("transform", "rotate(" + o + "deg)"), e("#second").css("transform", "rotate(" + n + "deg)")
            } else e(".clock .time").html(s.format((12 == this.settings.timeFormat ? "h" : "HH") + ":mm") + (1 == this.settings.showSeconds || "" == this.settings.showSeconds ? '<span class="sec">' + s.format("ss") + "</span>" : "") + (1 == this.settings.showAmpm ? '<span class="time-ampm">' + s.format("A") + "</span>" : ""));
            "D MMMM" == this.settings.dateFormat ? e(".date").html('<div class="day-of-week">' + s.format("dddd") + '</div><div class="month">' + s.format("D MMMM") + "</div>") : "dddd D. MMMM" == this.settings.dateFormat ? e(".date").html('<div class="day-of-week">' + s.format("dddd D. MMMM") + "</div>") : e(".date").html('<div class="day-of-week">' + s.format("dddd") + '</div><div class="month">' + s.format("MMMM D") + "</div>"), setTimeout(function() {
                t.updateTime()
            }, 1e3)
        }, t.updateEvents = function() {
            e("#calendar").load(this.settings.route + "/events", function() {
                e(s).resize(), e("#events-loading").hide(), e("#calendar").fadeIn()
            }), setTimeout(function() {
                t.updateEvents()
            }, this.settings.isPremium ? 9e5 : 36e5)
        }, t.updateTodo = function() {
            e("#todo").load(this.settings.route + "/todo", function() {
                e(s).resize(), e("#todo-loading").hide(), e("#todo").fadeIn()
            }), setTimeout(function() {
                t.updateTodo()
            }, 9e5)
        }, t.updateWeather = function() {
            e("#weather").load(this.settings.route + "/weather", function() {
                e("#weather-loading").hide(), e("#weather").fadeIn(), e(s).resize()
            }), setTimeout(function() {
                t.updateWeather()
            }, 18e5)
        }, t.updateWeatherForecast = function() {
            e.getJSON(this.settings.route + "/weatherForecast", function(t) {
                for (var s = 0; s < t.forecast.length; s++) e(".weather-forecast-" + t.forecast[s].day).html('<span class="weather-forecast-icon wi ' + t.forecast[s].icon_class + '"></span><span class="weather-forecast-item-high">' + t.forecast[s].temp_high + '</span><span class="weather-forecast-item-low">' + t.forecast[s].temp_low + "</span>")
            }), setTimeout(function() {
                t.updateWeatherForecast()
            }, 36e5)
        }, t.updateRss = function() {
            e.getJSON(this.settings.route + "/rss", function(e) {
                t.rssData = e, t.rssItemsTotal = e.length, t.rssCurrent = 0, clearTimeout(t.rssRotateTimer), t.rotateRssTitles()
            }), setTimeout(function() {
                t.updateRss()
            }, 18e5)
        }, t.rotateRssTitles = function() {
            var s = this.rssCurrent,
                n = this.rssData;
            e(".rss-title").fadeOut(200, function() {
                e(this).html(n[s].title).fadeIn(200)
            }), e(".rss-description").length > 0 && e(".rss-description").fadeOut(200, function() {
                e(this).html(n[s].description).fadeIn(200)
            }), this.rssCurrent++, this.rssCurrent >= this.rssItemsTotal && (this.rssCurrent = 0), this.rssRotateTimer = setTimeout(function() {
                t.rotateRssTitles()
            }, 25e3)
        }, t.updatePhoto = function() {
            if (e("#background-underlay-1").is(":visible")) var s = e("#background-underlay-1"),
                o = e("#background-underlay-2");
            else o = e("#background-underlay-1"), s = e("#background-underlay-2");
            e.getJSON(this.settings.route + "/photos", function(a) {
                e("<img/>").attr("src", a.url).load(function() {
                    e(this).remove(), o.css({
                        background: "#000 url(" + a.url + ") center center",
                        backgroundSize: "fill" == t.settings.photoLayout ? "cover" : "contain",
                        backgroundRepeat: "no-repeat"
                    });
                    var i = '<span class="dark">Photo</span> ';
                    a.owner && (i = i + ' <span class="dark">by</span> <a href="' + a.profile_url + '" target="_blank">' + a.owner + "</a>"), e("#img-owner").html(i + ' <span class="dark">' + a.verb + "</span> " + a.taken), e("#img-title").html('<span class="glyphicon glyphicon-camera"></span>&nbsp;&nbsp;' + a.title), o.show(), 1 == t.settings.photoTransition ? s.fadeOut(1e3, function() {
                        s.css({
                            background: "none",
                            zIndex: 9
                        }), o.css({
                            zIndex: 10
                        })
                    }) : (s.hide().css({
                        background: "none",
                        zIndex: 0
                    }), o.css({
                        zIndex: 1
                    })), n.set(0), n.animate(1, {
                        duration: t.settings.photoChange,
                        step: function(t, e, s) {}
                    }, function() {})
                })
            }), setTimeout(function() {
                t.updatePhoto()
            }, t.settings.photoChange)
        }, t.init = function(s) {
            return console.log("mPanel:publicApi.init"), t.settings = e.extend({}, t.defaults, s), t
        }, t
    }
}(this, jQuery, window, document);
